@using HttpClients.ClientInterfaces
@using Domain.Models
@inject NavigationManager navMgr
@inject IUserService UserService
@inject IItemService ItemService

<div class="card m-2">
 <div class="card-body">
     <div class="card-text text-center">
        <img @onclick="(() => Update())" class="card-img-top img-fluid" src="@Image" alt="Card image cap">
        <h5>@Name</h5>
    </div>
    <div>
        <h6 class="card-text"><b>Price</b>: <small>@Price</small>$</h6>
        <h6 class="card-text"><b>Seller Name</b>: <small>@FullNameSeller</small></h6>
    </div>
         
 </div>
</div>

@code {

   [Parameter]
   public string Name {get; set;}

   [Parameter]
   public string Image {get; set;}

   [Parameter]
   public double Price { get; set; }
    
    [Parameter]
    public string FullNameSeller {get; set;}
    
    private string msg = "";

    private async void Update()
    {
        try
        {
            IEnumerable<User> users = await UserService.GetUsers(FullNameSeller.Split(' ')[0], FullNameSeller.Split(' ')[1]);
            List<User> user = new List<User>(users);
            if (user.Count() != 1)
                throw new Exception();
            List<Item> items = await ItemService.GetItemsByOwner(user[0]);
            int idOfItem = 0;
            foreach (var item in items)
            {
                if (item.Name.Equals(Name))
                {
                    idOfItem = item.Id;
                    break;
                }
            }
            navMgr.NavigateTo($"/ViewItem/{idOfItem}");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
    }
}