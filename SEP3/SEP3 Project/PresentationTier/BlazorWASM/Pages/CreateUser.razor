@page "/CreateUser"
@using Domain.DTOs
@using HttpClients.ClientInterfaces
@using System.ComponentModel.DataAnnotations
@inject IUserService userService
@inject NavigationManager navMgr;

<div class="form-body">
    <div class="row">
        <div class="form-holder">
            <div class="form-content">
                <div class="form-items">
                    <h3>Create User</h3>
                    <p>Fill in the data below.</p>
                    <EditForm Model="@userCreation" OnValidSubmit="@HandleValidSubmit">
                        <DataAnnotationsValidator/>
                        <div class="col-md-12 ForInput">
                            <InputText class="form-control ForInput" type="text" placeholder="First Name" @bind-Value="userCreation.FirstName"/>
                            <ValidationMessage For="() => userCreation.FirstName"/>
                        </div>
                        <div class="col-md-12 ForInput">
                            <InputText class="form-control" type="text" name="LastName" placeholder="Last Name" @bind-Value="userCreation.LastName"/>
                            <ValidationMessage For="() => userCreation.LastName"/>
                        </div>

                        <div class="col-md-12 ForInput">
                            <InputText class="form-control" type="email" name="email" placeholder="E-mail Address" @bind-Value="userCreation.Email"/>
                            <ValidationMessage For="() => userCreation.Email"/>
                        </div>

                        <div class="col-md-12 ForInput">
                            <InputText class="form-control" type="text" name="phoneNumber" placeholder="Phone number" @bind-Value="userCreation.PhoneNumber"/>
                            <ValidationMessage For="() => userCreation.PhoneNumber"/>
                        </div>

                        <div class="col-md-12" ForInput>
                            <InputText class="form-control" type="password" name="password" placeholder="Password" @bind-Value="userCreation.Password"/>
                            <ValidationMessage For="() => userCreation.Password" class="ForInvalidMessage"/>
                        </div>


                        <div class="col-md-12 mt-3">
                            <label class="mb-3 mr-1" for="gender">Gender: </label>
                            <InputRadioGroup @bind-Value="userCreation.Gender">
                                <InputRadio Value="true" class="btn-check" id="male" autocomplete="off"/>
                                <label class="btn btn-sm btn-outline-secondary" for="male">Male</label>

                                <InputRadio Value="false" class="btn-check" id="female" autocomplete="off"/>
                                <label class="btn btn-sm btn-outline-secondary" for="female">Female</label>
                                <ValidationMessage For="() => userCreation.Gender"/>

                            </InputRadioGroup>
                        </div>
                        <div class="form-button mt-3">
                            <button id="submit" type="submit" class="btn btn-primary">Register</button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private UserCreationDto userCreation = new();

    private async void HandleValidSubmit()
    {
        try
        {
            navMgr.NavigateTo("/LoginSeeProfile");
            await userService.Create(userCreation);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
        }
    }

}