@page "/Marketplace"
@using Microsoft.AspNetCore.Components.Authorization
@using Domain.Models
@using HttpClients.ClientInterfaces
@inject NavigationManager navMgr
@inject IItemService itemService    

<CascadingAuthenticationState>
    <AuthorizeView>
        <Authorized>
            <div class="field">
                <button class="postItemBtn" @onclick="CreatePost">Log in</button>
            </div>
        </Authorized>
        <NotAuthorized>
            @if (items == null)
            {
                <label>Loading...</label>
            }
            else
            {
                <div class="container">
                    <div class="container">
                        <div class="row my-5">
                            <div class="col-12 mt-3 blue">
                                <h1 class="text-center">Items</h1>
                            </div>
                        </div>
                        <div class="row my-5 align-center border border-2 rounded-top">
                            <div class="row">
                                <label>items count: @items.Count</label>
                                @foreach (Item item in items)
                                {
                                    /*string temp = item.ContactFirstName + " " + item.ContactLastName;
                                    <div class="col-lg-4 text-center justify-content-center">
                                        <ItemCard Image="../Images/kompai.jpg" Name=@item.Name Price=@item.Pricing FullNameSeller=@temp></ItemCard>
                                    </div>*/
                                    <label>@item.Name</label>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        </NotAuthorized>
    </AuthorizeView>
</CascadingAuthenticationState>


@code {
    private List<Item> items = new();

    protected async override void OnInitialized()
    {
        try
        {
            items = await itemService.GetItems();
        }
        catch
        {
            Console.WriteLine("pula tie");
        }
    }

    private void CreatePost()
    {
        navMgr.NavigateTo("/CreatePost");
    }
}