@page "/ViewItem/{itemId:int?}"
@using HttpClients.ClientInterfaces
@using Syncfusion.Blazor.Navigations
@using Microsoft.AspNetCore.Components.Authorization
@using Domain.Models
@inject IItemService ItemService
@inject IImageService ImageService
@inject IUserService UserService

@if (item is null)
{
    <h5 style="color: white">Loading...</h5>
}
else
{
    <CascadingAuthenticationState>
        <AuthorizeView>
            <Authorized>
                <div class="container">
                    <div class="card">
                        <div class="row">
                            <div class="col-lg-7">
                                <SfCarousel>
                                    @foreach (var image in images)
                                    {
                                        <CarouselItem>

                                            <figure class="img-container">
                                                <img class="img-fluid d-flex justify-content-center" src="data:@image.contentType;base64,@image.base64data" alt="image of the item" style="height:100%;width:100%;">
                                            </figure>

                                        </CarouselItem>
                                    }
                                </SfCarousel>
                            </div>
                            <div class="col-lg-4 border-start">
                                <div class="ms-2 mt-2">
                                    <p>
                                        <b>@item.Name </b>
                                    </p>
                                    <p>
                                        <span class="oi oi-person" aria-hidden="true">&nbsp &nbsp</span><b>@itemOwner.firstName @itemOwner.lastName, says:</b> @item.Description
                                    </p>
                                    <h1 class="border-2 bg-success text-white">Price: @item.Pricing @item.Currency</h1>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </Authorized>
            <NotAuthorized>
                <div class="container">
                    <div class="card">
                        <div class="row">
                            <div class="col-lg-7">
                                <SfCarousel>
                                    @foreach (var image in images)
                                    {
                                        <CarouselItem>

                                            <figure class="img-container">
                                                <img class="img-fluid d-flex justify-content-center" src="data:@image.contentType;base64,@image.base64data" alt="image of the item" style="height:100%;width:100%;">
                                            </figure>

                                        </CarouselItem>
                                    }
                                </SfCarousel>
                            </div>
                            <div class="col-lg-4 border-start">
                                <div class="ms-2 mt-2">
                                    <p>
                                        <b>@item.Name </b>
                                    </p>
                                    <p>
                                        <span class="oi oi-person" aria-hidden="true">&nbsp &nbsp</span><b>@itemOwner.firstName @itemOwner.lastName, says:</b> @item.Description
                                    </p>
                                    <h1 class="border-2 bg-success text-white">Price: @item.Pricing @item.Currency</h1>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </NotAuthorized>
        </AuthorizeView>
    </CascadingAuthenticationState>
}

@code {

    [Parameter]
    public int itemId { get; set; }

    public Item item;
    public User itemOwner;
    public List<Image> images;

    protected override async Task OnInitializedAsync()
    {
        item = await ItemService.GetItemById(itemId);
        images = await ImageService.GetImagesByItemId(itemId);
        itemOwner = await UserService.GetUserById(item.OwnerId);
    }

}