@page "/LoginSeeProfile"
@using BlazorWasm.Services
@using Domain.DTOs
@using Microsoft.AspNetCore.Components.Authorization
@inject IAuthService authService
@inject NavigationManager navMgr
<CascadingAuthenticationState>
    <AuthorizeView Context="Auth">
        <NotAuthorized>
            <div class="form-body">
                <div class="row">
                    <div class="form-holder">
                        <div class="form-content">
                            <div class="form-items">
                                <h3>Login</h3>
                                <p>Fill in the data below.</p>
                                <EditForm Model="@userLogin" OnValidSubmit="@HandleValidSubmit">
                                    <DataAnnotationsValidator/>
                                    <div class="col-md-12 ForInput">
                                        <InputText class="form-control" type="email" name="email" placeholder="E-mail Address" @bind-Value="userLogin.Email"/>
                                        <ValidationMessage For="() => userLogin.Email"/>
                                    </div>
                                    <div class="col-md-12" ForInput>
                                        <InputText class="form-control" type="password" name="password" placeholder="Password" @bind-Value="userLogin.Password"/>
                                        <ValidationMessage For="() => userLogin.Password" class="ForInvalidMessage"/>
                                    </div>
                                    <div class="form-button mt-3">
                                        <button id="submit" type="submit" class="btn btn-primary">Login</button>
                                    </div>
                                </EditForm>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </NotAuthorized>
        <Authorized>

        </Authorized>
    </AuthorizeView>
</CascadingAuthenticationState>

@code {
    

    private UserLoginDto userLogin = new();

    private async void HandleValidSubmit()
    {
        try
        {
            navMgr.NavigateTo("/Marketplace");
            await authService.LoginAsync(userLogin.Email, userLogin.Password);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
        }
    }
    }
}